---

- name: Ensure GitLab runner repository
  ansible.builtin.get_url:
    url:  https://packages.gitlab.com/install/repositories/runner/gitlab-runner/config_file.list?os={{ ansible_distribution }}&dist={{ ansible_distribution_release }}
    dest: /etc/apt/sources.list.d/runner_gitlab-runner.list
    mode:  +x,go-w

- name: Ensure GitLab Runner repository GPG key
  ansible.builtin.apt_key:
    url: https://packages.gitlab.com/runner/gitlab-runner/gpgkey

- name: Ensure Gitlab Runner repository signing key
  ansible.builtin.shell:
    cmd:     curl -fsSL https://packages.gitlab.com/runner/gitlab-runner/gpgkey | gpg --dearmor > /usr/share/keyrings/runner_gitlab-runner-archive-keyring.gpg
    creates: /usr/share/keyrings/runner_gitlab-runner-archive-keyring.gpg

- name: Ensure apt cache update
  ansible.builtin.apt:
    update_cache: yes

- name: Ensure install Gitlab runner     
  ansible.builtin.apt:
    name:         gitlab-runner
  environment:
    GITLAB_RUNNER_DISABLE_SKEL: 'true'

- name: Ensure install docker-machine
  ansible.builtin.get_url:
    url:   https://gitlab-docker-machine-downloads.s3.amazonaws.com/{{ gitlab_runner_autoscaling_docker_machine_version }}/docker-machine--{{ ansible_system }}-{{ ansible_architecture }}
    dest:  /usr/local/bin/docker-machine
    owner: root
    group: root
    mode:  +x,go-w

- name: Ensure install docker-machine-driver-hetzner
  ansible.builtin.unarchive:
    remote_src: true
    src:        https://github.com/JonasProgrammer/docker-machine-driver-hetzner/releases/download/{{ gitlab_runner_autoscaling_docker_machine_driver_hetzner_version }}/docker-machine-driver-hetzner_{{ gitlab_runner_autoscaling_docker_machine_driver_hetzner_version }}_linux_amd64.tar.gz
    dest:       /usr/local/bin
    owner:      root
    group:      root
    mode:       +x,go-w

- name: Ensure prepare community.docker.docker_container
  ansible.builtin.include_tasks: docker_container.yml
  when: gitlab_runner_autoscaling_s3_cache_minio or gitlab_runner_autoscaling_docker_proxy

- name: Ensure S3 Cache by minio
  ansible.builtin.include_tasks: minio.yml
  when: gitlab_runner_autoscaling_s3_cache_minio

- name: Ensure docker registry proxy
  ansible.builtin.include_tasks: registry.yml
  when: gitlab_runner_autoscaling_docker_proxy

- name: Print register gitlab-runner command
  ansible.builtin.debug:
    msg: gitlab-runner register --name {{ gitlab_runner_autoscaling_name }}
            --tag-list="{{ gitlab_runner_autoscaling_tag_list }}"
            {{ '--run-untagged' if gitlab_runner_autoscaling_run_untagged else '' }}
            --locked="{{ gitlab_runner_autoscaling_locked }}"
            {{ gitlab_runner_autoscaling_args | join(' ') }}
            {{ (gitlab_runner_autoscaling_s3_cache_minio_args | join(' ')) if gitlab_runner_autoscaling_s3_cache_minio else '' }}
            {{ (gitlab_runner_autoscaling_docker_proxy_args   | join(' ')) if gitlab_runner_autoscaling_docker_proxy   else '' }}
  when: gitlab_runner_autoscaling_debug

- name: Ensure register gitlab-runner
  ansible.builtin.shell:
    cmd: gitlab-runner register --name {{ gitlab_runner_autoscaling_name }}
            {{ gitlab_runner_autoscaling_args | join(' ') }}
            {{ (gitlab_runner_autoscaling_s3_cache_minio_args | join(' ')) if gitlab_runner_autoscaling_s3_cache_minio else '' }}
            {{ (gitlab_runner_autoscaling_docker_proxy_args   | join(' ')) if gitlab_runner_autoscaling_docker_proxy   else '' }}
          && touch ansible-shell-done-gitlab-runner-register
          && rm -f ansible-shell-done-gitlab-runner-unregister
  args:
    creates: ansible-shell-done-gitlab-runner-register

- name: Ensure configure concurrent
  ansible.builtin.lineinfile:
    path:   /etc/gitlab-runner/config.toml
    regexp: '^concurrent ='
    line:   concurrent = {{ gitlab_runner_autoscaling_concurrent }}

...
